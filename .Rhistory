source('C:/Users/Rahul/Desktop/kings_case_comp/simplemodel.R', echo=TRUE)
foul_trouble <- function(game_clock, period, fouls) {
game_clock_as_int <- (as.numeric(as.POSIXct(game_clock, format = '%M:%S')) - as.numeric(as.POSIXct('00:00', format = '%M:%S')))/60
time_remaining <- (4-period) * 12 + game_clock_as_int
foul_trouble_data <- read.csv('./foul_trouble_data.csv')
foul_trouble_model <- lm(X0.1 ~ X45 + X1, data=foul_trouble_data)
intercept <- foul_trouble_model$coefficients[1]
time_coefficient <- foul_trouble_model$coefficients[2]
foul_coefficient <- foul_trouble_model$coefficients[3]
val <- intercept + (time_coefficient * time_remaining) + (foul_coefficient * fouls)
min_val <- intercept
max_val <- intercept + (min_coefficient * 48) + (foul_coefficient * 5)
return ((val - min_val) / (max_val - min_val))
}
foul_trouble <- function(game_clock, period, fouls) {
game_clock_as_int <- (as.numeric(as.POSIXct(game_clock, format = '%M:%S')) - as.numeric(as.POSIXct('00:00', format = '%M:%S')))/60
time_remaining <- (4-period) * 12 + game_clock_as_int
foul_trouble_data <- read.csv('./foul_trouble_data.csv')
foul_trouble_model <- lm(X0.1 ~ X45 + X1, data=foul_trouble_data)
intercept <- foul_trouble_model$coefficients[1]
time_coefficient <- foul_trouble_model$coefficients[2]
foul_coefficient <- foul_trouble_model$coefficients[3]
val <- intercept + (time_coefficient * time_remaining) + (foul_coefficient * fouls)
min_val <- intercept
max_val <- intercept + (min_coefficient * 48) + (foul_coefficient * 5)
return ((val - min_val) / (max_val - min_val))
}
foul_trouble('0:00', 4, 0)
foul_trouble <- function(game_clock, period, fouls) {
game_clock_as_int <- (as.numeric(as.POSIXct(game_clock, format = '%M:%S')) - as.numeric(as.POSIXct('00:00', format = '%M:%S')))/60
time_remaining <- (4-period) * 12 + game_clock_as_int
foul_trouble_data <- read.csv('./foul_trouble_data.csv')
foul_trouble_model <- lm(X0.1 ~ X45 + X1, data=foul_trouble_data)
intercept <- foul_trouble_model$coefficients[1]
time_coefficient <- foul_trouble_model$coefficients[2]
foul_coefficient <- foul_trouble_model$coefficients[3]
val <- intercept + (time_coefficient * time_remaining) + (foul_coefficient * fouls)
min_val <- intercept
max_val <- intercept + (time_coefficient * 48) + (foul_coefficient * 5)
return ((val - min_val) / (max_val - min_val))
}
foul_trouble('0:00', 4, 0)
foul_trouble('12:00', 1, 5)
foul_trouble('3:00', 2, 4)
